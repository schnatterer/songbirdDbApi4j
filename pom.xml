<!--

    Copyright (C) 2015 Johannes Schnatterer

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!-- Copyright (C) 2015 Johannes Schnatterer Licensed under the Apache License, 
	Version 2.0 (the "License"); you may not use this file except in compliance 
	with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>info.schnatterer</groupId>
	<artifactId>songbirdDbApi4j</artifactId>
	<version>1.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>songbirdDbApi4j</name>
	<url>https://github.com/schnatterer/songbirdDbApi4j</url>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:ssh://github.com/schnatterer/songbirdDbApi4j.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/schnatterer/songbirdDbApi4j.git</developerConnection>
		<url>https://github.com/schnatterer/songbirdDbApi4j</url>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<license-maven-plugin.version>2.11</license-maven-plugin.version>

		<!-- Set up a <server> in ~/.m2/settings.xml with this <id> and username 
			+ password, for deploying artifacts to github maven repo -->
		<github.global.server>github</github.global.server>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<arguments>-Prelease</arguments>
					<!-- Make our tags look like e.g. "v.1.0.1" -->
					<tagNameFormat>v.@{project.version}</tagNameFormat>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
			<!-- <plugin> <!- Configure the site-maven-plugin to upload from temporary 
				staging repo to mvn-repo branch on github. Calling "mvn clean deploy" will 
				build and deploy the artifacts. Unfortunately, this results in an error send 
				by the github API ""nil is not a string. (422)". -> <groupId>com.github.github</groupId> 
				<artifactId>site-maven-plugin</artifactId> <version>0.11</version> <configuration> 
				<!- git commit message -> <message>Maven artifacts for ${project.version}</message> 
				<!- Same path as in maven-deploy-plugin -> <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> 
				<!- remote branch name -> <branch>refs/heads/mvn-repo</branch> <includes> 
				<include>**/*</include> </includes> <!- Don't overwrite previous releases 
				-> <merge>true</merge> </configuration> <executions> <!- run site-maven-plugin's 
				'site' target as part of the build's normal 'deploy' phase -> <execution> 
				<goals> <goal>site</goal> </goals> <phase>deploy</phase> </execution> </executions> 
				</plugin> -->
			<plugin>
				<!-- Check for missing license headers in files. Licenses can be added 
					by calling "mvn license:format" -->
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${license-maven-plugin.version}</version>
				<configuration>
					<header>src/main/config/license-templates/APACHE-2.txt</header>
					<properties>
						<project.inceptionYear>2015</project.inceptionYear>
						<owner>Johannes Schnatterer</owner>
					</properties>
					<excludes>
						<exclude>LICENSE</exclude>
					</excludes>
				</configuration>
				<dependencies>
					<!-- Use information from git for old files -->
					<dependency>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin-git</artifactId>
						<!-- make sure to use the same version as license-maven-plugin -->
						<version>${license-maven-plugin.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<!-- Check for missing licenses in validate phase. Fail if none. -->
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.7.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
